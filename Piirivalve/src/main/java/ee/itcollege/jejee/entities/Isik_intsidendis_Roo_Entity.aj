// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.jejee.entities;

import ee.itcollege.jejee.entities.Isik_intsidendis;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Isik_intsidendis_Roo_Entity {
    
    @Version
    @Column(name = "version")
    private Integer Isik_intsidendis.version;
    
    public Integer Isik_intsidendis.getVersion() {
        return this.version;
    }
    
    public void Isik_intsidendis.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void Isik_intsidendis.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Isik_intsidendis attached = Isik_intsidendis.findIsik_intsidendis(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Isik_intsidendis.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Isik_intsidendis.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Isik_intsidendis Isik_intsidendis.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Isik_intsidendis merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static long Isik_intsidendis.countIsik_intsidendises() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Isik_intsidendis o", Long.class).getSingleResult();
    }
    
    public static List<Isik_intsidendis> Isik_intsidendis.findAllIsik_intsidendises() {
        return entityManager().createQuery("SELECT o FROM Isik_intsidendis o", Isik_intsidendis.class).getResultList();
    }
    
    public static Isik_intsidendis Isik_intsidendis.findIsik_intsidendis(Long id) {
        if (id == null) return null;
        return entityManager().find(Isik_intsidendis.class, id);
    }
    
    public static List<Isik_intsidendis> Isik_intsidendis.findIsik_intsidendisEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Isik_intsidendis o", Isik_intsidendis.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
