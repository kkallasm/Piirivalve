// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.jejee.entities;

import ee.itcollege.jejee.entities.Piirivalvur_intsidendis;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Piirivalvur_intsidendis_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager Piirivalvur_intsidendis.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer Piirivalvur_intsidendis.version;
    
    public Integer Piirivalvur_intsidendis.getVersion() {
        return this.version;
    }
    
    public void Piirivalvur_intsidendis.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void Piirivalvur_intsidendis.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Piirivalvur_intsidendis.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Piirivalvur_intsidendis attached = Piirivalvur_intsidendis.findPiirivalvur_intsidendis(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Piirivalvur_intsidendis.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Piirivalvur_intsidendis.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Piirivalvur_intsidendis Piirivalvur_intsidendis.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Piirivalvur_intsidendis merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Piirivalvur_intsidendis.entityManager() {
        EntityManager em = new Piirivalvur_intsidendis().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Piirivalvur_intsidendis.countPiirivalvur_intsidendises() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Piirivalvur_intsidendis o", Long.class).getSingleResult();
    }
    
    public static List<Piirivalvur_intsidendis> Piirivalvur_intsidendis.findAllPiirivalvur_intsidendises() {
        return entityManager().createQuery("SELECT o FROM Piirivalvur_intsidendis o", Piirivalvur_intsidendis.class).getResultList();
    }
    
    public static Piirivalvur_intsidendis Piirivalvur_intsidendis.findPiirivalvur_intsidendis(Long id) {
        if (id == null) return null;
        return entityManager().find(Piirivalvur_intsidendis.class, id);
    }
    
    public static List<Piirivalvur_intsidendis> Piirivalvur_intsidendis.findPiirivalvur_intsidendisEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Piirivalvur_intsidendis o", Piirivalvur_intsidendis.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
